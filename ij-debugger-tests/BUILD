load("//tools/adt/idea/jps-build:idea.bzl", "jps_library")
load("//tools/base/bazel:maven.bzl", "maven_repository")
load(":ij-debugger-tests.bzl", "debugger_test", "shard")

jps_library(
    name = "kotlin.jvm-debugger.test_lib",
    download_cache = "prebuilts/tools/jps-build-caches/kotlin.jvm-debugger.test_lib",
    module = "kotlin.jvm-debugger.test",
    deps = [
        "//prebuilts/tools/jps-build-caches:kotlin.jvm-debugger.test_lib",
        "//tools/idea:idea_source",
    ],
)

# buildifier: leave-alone
debugger_test(
    name = "kotlin.jvm-debugger.test_tests",
    size = "large",
    download_cache = "prebuilts/tools/jps-build-caches/kotlin.jvm-debugger.test_tests",
    module = "kotlin.jvm-debugger.test",
    suite = "com.android.tools.test.ModuleTestSuite",
    tags = ["ci:studio-linux-large"],
    deps = [
        ":kotlin.jvm-debugger.test_lib",
        ":test_repo.zip",
        "//prebuilts/tools/jps-build-caches:kotlin.jvm-debugger.test_lib",
        "//prebuilts/tools/jps-build-caches:kotlin.jvm-debugger.test_tests",
        "//tools/idea:idea_source",
    ],
    split_tests_jvm = {
        "ambiguous_chains": "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.java.AmbiguousChainsTest",
        "async_stack_trace": "org.jetbrains.kotlin.idea.debugger.test.AsyncStackTraceTestGenerated",
        "breakpoint_applicability": "org.jetbrains.kotlin.idea.debugger.test.BreakpointApplicabilityTestGenerated",
        "class_name_calculator": "org.jetbrains.kotlin.idea.debugger.test.ClassNameCalculatorTestGenerated",
        "continuation_stack_trace": "org.jetbrains.kotlin.idea.debugger.test.ContinuationStackTraceTestGenerated",
        "coroutine_dump": "org.jetbrains.kotlin.idea.debugger.test.CoroutineDumpTestGenerated",
        "indy_lambda_ir_kotlin_evaluate_expression": shard("org.jetbrains.kotlin.idea.debugger.test.IndyLambdaIrKotlinEvaluateExpressionTestGenerated", 10),
        "indy_lambda_ir_kotlin_stepping": "org.jetbrains.kotlin.idea.debugger.test.IndyLambdaIrKotlinSteppingTestGenerated",
        "ir_breakpoint_highlighting": "org.jetbrains.kotlin.idea.debugger.test.IrBreakpointHighlightingTestGenerated",
        "ir_kotlin_evaluate_expression_in_mpp": shard("org.jetbrains.kotlin.idea.debugger.test.IrKotlinEvaluateExpressionInMppTestGenerated", 10),
        "ir_kotlin_evaluate_expression_with_ir_fragment_compiler": shard("org.jetbrains.kotlin.idea.debugger.test.IrKotlinEvaluateExpressionWithIRFragmentCompilerTestGenerated", 5),
        "ir_kotlin_evaluate_expression": shard("org.jetbrains.kotlin.idea.debugger.test.IrKotlinEvaluateExpressionTestGenerated", 5),
        "ir_kotlin_script_evaluate_expression": "org.jetbrains.kotlin.idea.debugger.test.IrKotlinScriptEvaluateExpressionTestGenerated",
        "ir_kotlin_stepping": "org.jetbrains.kotlin.idea.debugger.test.IrKotlinSteppingTestGenerated",
        "ir_sequence_trace_test_case": "org.jetbrains.kotlin.idea.debugger.test.sequence.exec.IrSequenceTraceTestCaseGenerated",
        "ir_sequence_trace_with_ir_evaluator_test_case": "org.jetbrains.kotlin.idea.debugger.test.sequence.exec.IrSequenceTraceWithIREvaluatorTestCaseGenerated",
        "k1k2_async_stack_trace": "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeAsyncStackTraceTestGenerated",
        "k1k2_breakpoint_highlighting": "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeBreakpointHighlightingTestGenerated",
        "k1k2_code_continuation_stack_trace": "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeContinuationStackTraceTestGenerated",
        "k1k2_code_coroutine_dump": "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeCoroutineDumpTestGenerated",
        "k1k2_code_x_coroutines_stack_trace": "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeXCoroutinesStackTraceTestGenerated",
        "k1k2_kotlin_evaluate_expression_in_mpp": shard("org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinEvaluateExpressionInMppTestGenerated", 5),
        "k1k2_kotlin_evaluate_expression": shard("org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinEvaluateExpressionTestGenerated", 5),
        "k1k2_kotlin_stepping": "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinSteppingTestGenerated",
        "k1k2_kotlin_variable_printing": "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinVariablePrintingTestGenerated",
        "k1k2_script_evaluate_expression": "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeScriptEvaluateExpressionTestGenerated",
        "kotlin_dsl": "org.jetbrains.kotlin.idea.debugger.test.sequence.dsl.KotlinDslTest",
        "kotlin_exception_filter_gen": "org.jetbrains.kotlin.idea.debugger.test.KotlinExceptionFilterTestGenerated",
        "kotlin_exception_filter": "org.jetbrains.kotlin.idea.debugger.test.KotlinExceptionFilterTest",
        "kotlin_variable_printing": "org.jetbrains.kotlin.idea.debugger.test.KotlinVariablePrintingTestGenerated",
        "location_positive_chain": "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.java.LocationPositiveChainTest",
        "negative_java_stream": "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.java.NegativeJavaStreamTest",
        "position_manager": "org.jetbrains.kotlin.idea.debugger.test.PositionManagerTestGenerated",
        "positive_collection_build": "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.collection.PositiveCollectionBuildTest",
        "select_expression_for_debugger_test_with_analysis_api": "org.jetbrains.kotlin.idea.debugger.test.SelectExpressionForDebuggerTestWithAnalysisApiGenerated",
        "select_expression_for_debugger_test_with_legacy_implementation": "org.jetbrains.kotlin.idea.debugger.test.SelectExpressionForDebuggerTestWithLegacyImplementationGenerated",
        "smart_step_into": "org.jetbrains.kotlin.idea.debugger.test.SmartStepIntoTestGenerated",
        "typed_collection_chain": "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.collection.TypedCollectionChainTest",
        "typed_java_chain": "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.java.TypedJavaChainTest",
        "typed_sequence_chain": "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.sequence.TypedSequenceChain",
        "x_coroutines_stack_trace": "org.jetbrains.kotlin.idea.debugger.test.XCoroutinesStackTraceTestGenerated",
    },
    test_exclude_filter_jvm = [
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeFileRankingTestGenerated",  # Needs java-guiForms-jps.jar, that is not built as part of the module. Needs a separate build step.
        "org.jetbrains.kotlin.idea.debugger.test.FileRankingTestGenerated",  # Needs java-guiForms-jps.jar, that is not built as part of the module. Needs a separate build step.
    ],
    split_tests_art = {
        "k1k2_kotlin_stepping": "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinSteppingTestGenerated",
    },
    test_exclude_filter_art = [
        # FAIL:
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinSteppingTestGenerated.Custom",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinSteppingTestGenerated.Filters",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinSteppingTestGenerated.SmartStepInto",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinSteppingTestGenerated.StepIntoOnly",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinSteppingTestGenerated.StepOut",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinSteppingTestGenerated.StepOver",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinSteppingTestGenerated.StepInto#testObjectFun",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinSteppingTestGenerated.StepInto#testClassObjectFunFromTopLevel",

        # UNKNOWN:
        "org.jetbrains.kotlin.idea.debugger.test.AsyncStackTraceTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.BreakpointApplicabilityTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.ClassNameCalculatorTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.ContinuationStackTraceTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.CoroutineDumpTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.FileRankingTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.IndyLambdaIrKotlinEvaluateExpressionTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.IndyLambdaIrKotlinSteppingTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.IrBreakpointHighlightingTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.IrKotlinEvaluateExpressionInMppTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.IrKotlinEvaluateExpressionTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.IrKotlinEvaluateExpressionWithIRFragmentCompilerTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.IrKotlinScriptEvaluateExpressionTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.IrKotlinSteppingTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeAsyncStackTraceTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeBreakpointHighlightingTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeContinuationStackTraceTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeCoroutineDumpTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeFileRankingTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinEvaluateExpressionInMppTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinEvaluateExpressionTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeKotlinVariablePrintingTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeScriptEvaluateExpressionTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.K1IdeK2CodeXCoroutinesStackTraceTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.KotlinExceptionFilterTest",
        "org.jetbrains.kotlin.idea.debugger.test.KotlinExceptionFilterTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.KotlinVariablePrintingTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.PositionManagerTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.SelectExpressionForDebuggerTestWithAnalysisApiGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.SelectExpressionForDebuggerTestWithLegacyImplementationGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.sequence.dsl.KotlinDslTest",
        "org.jetbrains.kotlin.idea.debugger.test.sequence.exec.IrSequenceTraceTestCaseGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.sequence.exec.IrSequenceTraceWithIREvaluatorTestCaseGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.collection.PositiveCollectionBuildTest",
        "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.collection.TypedCollectionChainTest",
        "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.java.AmbiguousChainsTest",
        "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.java.LocationPositiveChainTest",
        "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.java.NegativeJavaStreamTest",
        "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.java.TypedJavaChainTest",
        "org.jetbrains.kotlin.idea.debugger.test.sequence.psi.sequence.TypedSequenceChain",
        "org.jetbrains.kotlin.idea.debugger.test.SmartStepIntoTestGenerated",
        "org.jetbrains.kotlin.idea.debugger.test.XCoroutinesStackTraceTestGenerated",
    ],
)

maven_repository(
    name = "test_repo",
    # keep sorted: for buildifier
    artifacts = [
        "@maven//:org.jetbrains.annotations-java5_24.0.0",
    ],
    zip_prefix = "maven/",
)
