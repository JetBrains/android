load("//tools/base/bazel:bazel.bzl", "iml_module")

# managed by go/iml_to_build
iml_module(
    name = "intellij.android.apkanalyzer.apk",
    srcs = ["src"],
    iml_files = ["intellij.android.apkanalyzer.apk.iml"],
    visibility = ["//visibility:public"],
    # do not sort: must match IML order
    deps = [
        "@intellij//:intellij-sdk",
        "//tools/adt/idea/apkanalyzer:intellij.android.apkanalyzer",
        "//tools/adt/idea/project-system-apk:intellij.android.projectSystem.apk",
        "//tools/adt/idea/project-system:intellij.android.projectSystem",
        "//tools/adt/idea/android:intellij.android.core",
    ],
)

### auto-generated section `build intellij.android.apkanalyzer.apk` start
load("@rules_jvm//:jvm.bzl", "jvm_library", "jvm_resources")

jvm_resources(
  name = "android-apkanalyzer-apk_resources",
  files = glob(["src/META-INF/**/*"]),
  strip_prefix = "src"
)

jvm_library(
  name = "android-apkanalyzer-apk",
  module_name = "intellij.android.apkanalyzer.apk",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java"], allow_empty = True),
  deps = [
    "@lib//:kotlin-stdlib",
    "//android/apkanalyzer",
    "//android/project-system-apk:projectSystem-apk",
    "//android/project-system:projectSystem",
    "//android/android:core",
    "//platform/lang-api:lang",
  ],
  runtime_deps = [":android-apkanalyzer-apk_resources"]
)
### auto-generated section `build intellij.android.apkanalyzer.apk` end