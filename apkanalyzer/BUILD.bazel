### auto-generated section `build intellij.android.apkanalyzer` start
load("@rules_jvm//:jvm.bzl", "jvm_library", "jvm_resources")

jvm_resources(
  name = "apkanalyzer_resources",
  files = glob(["resources/**/*"]),
  strip_prefix = "resources"
)

jvm_library(
  name = "apkanalyzer",
  module_name = "intellij.android.apkanalyzer",
  visibility = ["//visibility:public"],
  srcs = glob(["src/**/*.kt", "src/**/*.java"], allow_empty = True),
  deps = [
    "@lib//:studio-platform-provided",
    "@lib//:guava",
    "@lib//:gson",
    "@lib//:aapt-proto",
    "@lib//:google-dexlib2",
    "@lib//:jetbrains-annotations",
    "@lib//:kotlin-stdlib",
    "@lib//:protobuf",
    "@lib//:swingx",
    "//android/adt-ui",
    "//android/artwork",
    "//android/android-common:common",
    "//android/jps-model",
    "//android/android-lang:lang",
    "//android/project-system",
    "//android/smali",
    "//plugins/color-schemes/warm-neon-color-scheme:color-scheme-warmNeon",
    "//java/debugger/openapi:java-debugger",
    "//java/debugger/impl",
    "//platform/analysis-api:analysis",
    "//platform/util/concurrency",
    "//platform/core-api:core",
    "//platform/core-impl",
    "//platform/core-ui",
    "//platform/editor-ui-api:editor-ui",
    "//platform/extensions",
    "//platform/platform-api:ide",
    "//platform/ide-core",
    "//platform/ide-core-impl",
    "//platform/platform-impl:ide-impl",
    "//platform/lang-api:lang",
    "//platform/lang-core",
    "//platform/projectModel-api:projectModel",
    "//platform/util",
    "//platform/util/base",
    "//platform/util-rt",
    "//platform/util:util-ui",
    "//android/adt-ui-model",
    "//java/java-psi-api:psi",
    "//platform/lang-impl",
  ],
  runtime_deps = [":apkanalyzer_resources"]
)
### auto-generated section `build intellij.android.apkanalyzer` end

### auto-generated section `build intellij.android.apkanalyzer.tests` start
jvm_resources(
  name = "apkanalyzer-tests_test_resources",
  files = glob(["testSrc/resources/**/*"]),
  strip_prefix = "testSrc/resources"
)

jvm_library(
  name = "apkanalyzer-tests_test_lib",
  visibility = ["//visibility:public"],
  srcs = glob(["testSrc/java/**/*.kt", "testSrc/java/**/*.java"], allow_empty = True),
  associates = ["//android/apkanalyzer"],
  deps = [
    "@lib//:studio-platform-provided",
    "@lib//:studio-test-platform",
    "//android/android-test-framework:testFramework_test_lib",
    "//android/adt-testutils:adt-testutils_test_lib",
    "@lib//:truth",
    "//android/adt-ui",
    "//android/adt-ui:adt-ui_test_lib",
    "@lib//:guava",
    "@lib//:junit4",
    "@lib//:kotlin-stdlib",
    "@lib//:kotlin-test",
    "//libraries/mockito",
    "@lib//:mockito-kotlin",
    "//platform/core-api:core",
    "//platform/editor-ui-api:editor-ui",
    "//platform/platform-impl:ide-impl",
    "//platform/platform-impl:ide-impl_test_lib",
    "//platform/analysis-api:analysis",
    "//platform/testFramework",
    "//platform/testFramework:testFramework_test_lib",
    "//platform/diff-impl",
    "@lib//:commons-compress",
  ],
  runtime_deps = [":apkanalyzer-tests_test_resources"]
)
### auto-generated section `build intellij.android.apkanalyzer.tests` end

### auto-generated section `test intellij.android.apkanalyzer.tests` start
load("@community//build:tests-options.bzl", "jps_test")

jps_test(
  name = "apkanalyzer-tests_test",
  runtime_deps = [":apkanalyzer-tests_test_lib"]
)
### auto-generated section `test intellij.android.apkanalyzer.tests` end